import tkinter as tk
from tkinter import ttk
from tkinter import messagebox
from picamera import PiCamera
from time import sleep

camera = PiCamera()

# Initialize camera with default settings
camera.resolution = (1920, 1080)
camera.awb_mode = 'off'  # Turn off auto white balance
camera.awb_gains = (1.0, 1.0)
camera.iso = 400
camera.shutter_speed = 500000  # 500 ms exposure

# Camera function to show preview
def show_camera():
    preview_x = 1280
    preview_y = 600
    preview_width = 640
    preview_height = 480
    camera.preview_fullscreen = False
    camera.preview_window = (preview_x, preview_y, preview_width, preview_height)
    camera.start_preview()

show_camera()  # Start camera preview

# Function to update camera settings
def update_camera_settings(r, b, iso, exposure):
    camera.awb_gains = (r, b)
    camera.iso = iso
    camera.shutter_speed = exposure

# Function to handle window close event
def on_closing():
    camera.stop_preview()
    camera.close()
    root.destroy()

# Create the main window
root = tk.Tk()
root.title('Camera Control Panel')
root.protocol("WM_DELETE_WINDOW", on_closing)

# Create the tab control
tab_control = ttk.Notebook(root)

# Picture tab
picture_tab = ttk.Frame(tab_control)
tab_control.add(picture_tab, text='Picture')

# Sliders for RGB, ISO, and Exposure
def update_camera_values(*args):
    r = red_slider.get()
    b = blue_slider.get()
    iso = iso_slider.get()
    exposure = exposure_slider.get()
    update_camera_settings(r, b, iso, exposure)

# Red slider
red_slider = tk.Scale(picture_tab, from_=0.0, to=8.0, resolution=0.1, orient=tk.HORIZONTAL, label='Red Gain', command=update_camera_values)
red_slider.set(1.0)
red_slider.pack(fill='x', padx=10, pady=5)

# Blue slider
blue_slider = tk.Scale(picture_tab, from_=0.0, to=8.0, resolution=0.1, orient=tk.HORIZONTAL, label='Blue Gain', command=update_camera_values)
blue_slider.set(1.0)
blue_slider.pack(fill='x', padx=10, pady=5)

# ISO slider
iso_slider = tk.Scale(picture_tab, from_=100, to=800, orient=tk.HORIZONTAL, label='ISO', command=update_camera_values)
iso_slider.set(400)
iso_slider.pack(fill='x', padx=10, pady=5)

# Exposure slider
exposure_slider = tk.Scale(picture_tab, from_=0, to=6000000, orient=tk.HORIZONTAL, label='Exposure', command=update_camera_values)
exposure_slider.set(500000)
exposure_slider.pack(fill='x', padx=10, pady=5)

# Pack the tab control
tab_control.pack(expand=1, fill='both')

# Start the Tkinter event loop
root.mainloop()

# Close camera when the program ends
camera.close()
